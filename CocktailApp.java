/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cocktails;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.lang.reflect.Array;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author BakiR Alkaraki
 */
public class CocktailApp extends javax.swing.JFrame {

    /**
     * Creates new form CocktailApp
     */
    ArrayList<Ingredient> arrIngList = new ArrayList<>();
    ArrayList<Ingredient> ingBlenderList = new ArrayList<>();
    ArrayList<Cup> arrCup = new ArrayList<>();    
    Blender blender = null;
    boolean blend = false;
    public CocktailApp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        fNameTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        fCaloriesTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fVolumeTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        fRedTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        fGreenTextField = new javax.swing.JTextField();
        fBlueTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        fruitButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        mCaloriesTextField = new javax.swing.JTextField();
        mVolumeTextField = new javax.swing.JTextField();
        milkButton = new javax.swing.JButton();
        sugarButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ingInfoTextArea = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        blenderTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        blenderButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        blenderTextArea = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        blendButton = new javax.swing.JButton();
        clearBlenderButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        cupButton = new javax.swing.JButton();
        cupCapacityTextField = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        cupList = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        cupInfoTextArea = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cocktail App");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Fruits");

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel1.setText("Fruit Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel3.setText("Fruit Calories");

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel4.setText("Fruit Volume");

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel5.setText("Fruit Color");

        fRedTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fRedTextFieldActionPerformed(evt);
            }
        });

        jLabel6.setText("Red");

        jLabel7.setText("Green");

        jLabel8.setText("Blue");

        jLabel9.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel9.setText("Milk");

        fruitButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        fruitButton.setText("Add Fruit");
        fruitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fruitButtonActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel10.setText("Milk Calories");

        jLabel11.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel11.setText("Milk Volume");

        mCaloriesTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mCaloriesTextFieldActionPerformed(evt);
            }
        });

        milkButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        milkButton.setText("Add Milk");
        milkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                milkButtonActionPerformed(evt);
            }
        });

        sugarButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sugarButton.setText("Add Sugar");
        sugarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sugarButtonActionPerformed(evt);
            }
        });

        ingInfoTextArea.setEditable(false);
        ingInfoTextArea.setColumns(20);
        ingInfoTextArea.setRows(5);
        jScrollPane1.setViewportView(ingInfoTextArea);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel12.setText("Ingredients List");

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setText("Add Ingredients to Blender");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setText("Blender");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Set Blender Capacity");

        blenderButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        blenderButton.setText("Create a Blender");
        blenderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blenderButtonActionPerformed(evt);
            }
        });

        blenderTextArea.setEditable(false);
        blenderTextArea.setColumns(20);
        blenderTextArea.setRows(5);
        jScrollPane2.setViewportView(blenderTextArea);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setText("Blender Contains");

        blendButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        blendButton.setText("Blend");
        blendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blendButtonActionPerformed(evt);
            }
        });

        clearBlenderButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        clearBlenderButton.setText("Clear Blender");
        clearBlenderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBlenderButtonActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Save Blender");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Load Blender");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton3.setText("Save Ingredient");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton5.setText("Load Ingredient");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton6.setText("Clear Ingredient List");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fVolumeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(fRedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(fGreenTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(fBlueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 586, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fCaloriesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(48, 48, 48)
                                        .addComponent(sugarButton)))
                                .addGap(79, 79, 79)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel11))
                                                .addGap(16, 16, 16)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(mCaloriesTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                                                    .addComponent(mVolumeTextField)))
                                            .addComponent(milkButton))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(blenderButton)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(blenderTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(115, 115, 115)
                                        .addComponent(jLabel15)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(137, 137, 137))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3)
                                    .addComponent(jButton5)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel12))
                            .addComponent(fruitButton)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jButton6))
                                    .addComponent(jButton4))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(blendButton)
                                .addGap(37, 37, 37)
                                .addComponent(clearBlenderButton))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jButton1))
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel9)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(mCaloriesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(fCaloriesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(fRedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(fGreenTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(fBlueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fruitButton)
                            .addComponent(sugarButton))
                        .addGap(41, 41, 41)
                        .addComponent(jLabel12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(mVolumeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(blenderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fVolumeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(milkButton)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel6))
                                    .addComponent(blenderButton))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel15)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(jButton1)
                        .addGap(48, 48, 48)
                        .addComponent(jButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jButton3)
                        .addGap(74, 74, 74)
                        .addComponent(jButton5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(blendButton)
                    .addComponent(clearBlenderButton)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)))
                .addContainerGap(110, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ingredients", jPanel1);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setText("Cupes");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("Cup Capacity");

        cupButton.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        cupButton.setText("Create Cup");
        cupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cupButtonActionPerformed(evt);
            }
        });

        cupList.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cups List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        cupList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                cupListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(cupList);

        cupInfoTextArea.setEditable(false);
        cupInfoTextArea.setColumns(20);
        cupInfoTextArea.setRows(5);
        jScrollPane4.setViewportView(cupInfoTextArea);

        jSeparator1.setBackground(new java.awt.Color(180, 180, 180));
        jSeparator1.setForeground(new java.awt.Color(180, 180, 180));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setText("Cup Information");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setText("Click to pour");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(cupCapacityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(cupButton))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addGap(132, 132, 132)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(404, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(cupCapacityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(cupButton)
                        .addGap(54, 54, 54)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(303, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cupes", jPanel2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 836, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 752, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void blenderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blenderButtonActionPerformed
        // TODO add your handling code here:
        if (blender != null)
        {
            JOptionPane.showMessageDialog(this, "You Already has a blender!");
            return;
        }
        if (blenderTextField.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Blender Capacity not found!");
            return;
        }
        int blenderCapa = Integer.parseInt(blenderTextField.getText());
        blender = new Blender(blenderCapa);
        blenderTextField.setText("");
        blenderTextArea.setText("Blender Capacity: " + blender.getCapacity() + "\nBlender Volume: " + blender.getVolume());
        JOptionPane.showMessageDialog(this, "You Created your Blender Successfuly!");
    }//GEN-LAST:event_blenderButtonActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (arrIngList.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Ingredient List Are Empty!");
            return;
        }
        if (blender == null)
        {
            JOptionPane.showMessageDialog(this, "You Must Creat your Blender first!");
            return;
        }
        
        int [] volumeSpare = new int[arrIngList.size()];
        int [] caloriesSpare = new int[arrIngList.size()];
        String [] ingSpareName = new String[arrIngList.size()];
        Color [] ingSpareColor = new Color[arrIngList.size()];
        
        for (int i = 0; i < arrIngList.size(); i++)
        {
            ingSpareName[i] = arrIngList.get(i).getName();
            caloriesSpare[i] = arrIngList.get(i).getCalories();
            volumeSpare[i] = arrIngList.get(i).getVolume();
            ingSpareColor[i] = arrIngList.get(i).getColor();
            if (arrIngList.get(i).getName().equals("Sugar"))
            {
                try {
                     Sugar spareSugar = new Sugar();
                     ingBlenderList.add(spareSugar);
                     blender.add(spareSugar);
                     displayBlenderInfo();
                } 
                catch(BlenderOverFlowException ex){
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
            }
            else if (arrIngList.get(i).getName().equals("Milk"))
            {
                try {
                    Milk spareMilk = new Milk(caloriesSpare[i], volumeSpare[i]);
                    blender.add(spareMilk);
                    ingBlenderList.add(spareMilk);
                    displayBlenderInfo();
                } 
                catch(BlenderOverFlowException ex){
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }          
            }
            else
            {
                try {                   
                    Fruit spareFruit = new Fruit(ingSpareName[i], caloriesSpare[i], volumeSpare[i], ingSpareColor[i]);
                    blender.add(spareFruit);
                    ingBlenderList.add(spareFruit);
                    displayBlenderInfo();
                } 
                catch(BlenderOverFlowException ex){
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }                
            }
        }
        arrIngList.clear();
        ingInfoTextArea.setText("");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void sugarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sugarButtonActionPerformed
        // TODO add your handling code here:
        Sugar sugar = new Sugar();
        arrIngList.add(sugar);
        displayIngredientInfo();
    }//GEN-LAST:event_sugarButtonActionPerformed

    private void milkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_milkButtonActionPerformed
        // TODO add your handling code here:
        if (mCaloriesTextField.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Milk Calories not found!");
            return;
        }
        else if (mVolumeTextField.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Milk Volume not found!");
            return;
        }
        int mCalories = Integer.parseInt(mCaloriesTextField.getText());
        int mVolume = Integer.parseInt(mVolumeTextField.getText());
        Milk milk = new Milk(mCalories, mVolume);
        arrIngList.add(milk);
        displayIngredientInfo();
        resetFieldsMilk();
    }//GEN-LAST:event_milkButtonActionPerformed

    private void mCaloriesTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mCaloriesTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mCaloriesTextFieldActionPerformed

    private void fruitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fruitButtonActionPerformed
        // TODO add your handling code here:
        if (fNameTextField.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Fruit Name not found!");
            return;
        }
        else if (fCaloriesTextField.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Fruit Calories not found!");
            return;
        }
        else if (fVolumeTextField.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Fruit Volume not found!");
            return;
        }
        else if (fRedTextField.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Red Color not found!");
            return;
        }
        else if (fGreenTextField.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Green Color not found!");
            return;
        }
        else if (fBlueTextField.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Blue not found!");
            return;
        }
        String fName = fNameTextField.getText();
        int fCalories = Integer.parseInt(fCaloriesTextField.getText());
        int fVolume = Integer.parseInt(fVolumeTextField.getText());
        int fRed = Integer.parseInt(fRedTextField.getText());
        int fGreen = Integer.parseInt(fGreenTextField.getText());
        int fBlue = Integer.parseInt(fBlueTextField.getText());
        Fruit fruit = new Fruit(fName, fCalories, fVolume, new Color(fRed,fGreen,fBlue));
        arrIngList.add(fruit);
        displayIngredientInfo();
        resetFieldsFruit();
    }//GEN-LAST:event_fruitButtonActionPerformed

    private void fRedTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fRedTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fRedTextFieldActionPerformed

    private void blendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blendButtonActionPerformed
        // TODO add your handling code here:
        if (blender == null)
        {
            JOptionPane.showMessageDialog(this, "You Must Creat your Blender first!");
            return;
        }
        try {
             blender.blend();
             blend = true;
             blenderTextField.setText("");
             blenderTextArea.setText("Blender Capacity: " + blender.getCapacity() + "\nBlender Volume: " + blender.getVolume() + "\nBlender Calories: " + blender.getCalories() + "\nBlender Mixtured Color: " + "(" + blender.getColor().getR()+ "," + blender.getColor().getG() + "," + blender.getColor().getB() + ")");
             ingBlenderList.clear();
        }
        catch(BlenderOverFlowException ex){
            if (blender.getVolume() == 0)
                JOptionPane.showMessageDialog(this, "The Blender is empty!");
            else
                JOptionPane.showMessageDialog(this, "The Coctail already blended!");
        }         
    }//GEN-LAST:event_blendButtonActionPerformed

    private void cupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cupButtonActionPerformed
        // TODO add your handling code here:
        if (cupCapacityTextField.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Cup Capacity not found!");
            return;
        }
        int capacity = Integer.parseInt(cupCapacityTextField.getText());
        Cup cup = new Cup(capacity);
        arrCup.add(cup);
        
        String []namesIncice = new String[arrCup.size()];
        for (int i = 0; i < arrCup.size(); i++)
        {
            namesIncice[i] = "Cup" + (i+1);
        }
        cupList.setListData(namesIncice);
        cupCapacityTextField.setText("");
        
    }//GEN-LAST:event_cupButtonActionPerformed

    private void cupListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_cupListValueChanged
        // TODO add your handling code here:
        if (blender == null)
        {
            JOptionPane.showMessageDialog(this, "You Must Creat your Blender first!");
            return;
        }
        else if (!blend)
        {
            JOptionPane.showMessageDialog(this, "Blender still not blended!");
            return;
        }
        try {
            int index = cupList.getSelectedIndex();
            int a = index + 1;
            if (index != -1)
            {
                String response;
                response = JOptionPane.showInputDialog(this, "Set Volume to pour to Cup " + a);
                int volume = 0;
                if (response.equals("full"))
                {
                    try{
                        int x = arrCup.get(index).getCapacity() - arrCup.get(index).getVolume();
                        if ((arrCup.get(index).getVolume() + x) > arrCup.get(index).getCapacity())
                            throw new CupOverFlowException();
                        
                        blender.pour(arrCup.get(index), x);
                    }
                    catch(BlenderIsEmptyException ex){
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    }
                    catch(CupOverFlowException ex){
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    }
                }
                else if (!response.equals(""))
                {
                    volume = Integer.parseInt(response);
                    try{
                        if ((arrCup.get(index).getVolume() + volume) > arrCup.get(index).getCapacity())
                            throw new CupOverFlowException();
                                                 
                        blender.pour(arrCup.get(index), volume);
                    }
                    catch(BlenderIsEmptyException ex){
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    }
                    catch(CupOverFlowException ex){
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    }
                }

                cupInfoTextArea.setText("Cup " + (index+1) + "\n" + arrCup.get(index).getCupInfo());
                blenderTextArea.setText("Blender Capacity: " + blender.getCapacity() + "\nBlender Volume: " + blender.getVolume() + "\nBlender Calories: " + blender.getCalories() + "\nBlender Mixtured Color: " + blender.getFinalColor());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "A Problem Happened");
        }
    }//GEN-LAST:event_cupListValueChanged

    private void clearBlenderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBlenderButtonActionPerformed
        // TODO add your handling code here:
        if (blender == null)
        {
            JOptionPane.showMessageDialog(this, "There are no blender to clear!");
            return;
        }        
        blender = null;
        blend = false;
        blenderTextArea.setText("");
    }//GEN-LAST:event_clearBlenderButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (blender == null)
        {
            JOptionPane.showMessageDialog(this, "You Must Creat your Blender first!");
            return;
        }
        else if (!blend)
        {
            JOptionPane.showMessageDialog(this, "Not blended yet");
            return;
        }
        else
        {           
            saveBlender(blender);           
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        blender = LoadBlender();
        blenderTextArea.setText("Blender Capacity: " + blender.getCapacity() + "\nBlender Volume: " + blender.getVolume() + "\nBlender Calories: " + blender.getCalories() + "\nBlender Mixtured Color: " + "(" + blender.getColor().getR()+ "," + blender.getColor().getG() + "," + blender.getColor().getB() + ")");      
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (arrIngList.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "List are Empty!");
            return;
        }
        saveIngredient(arrIngList);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        arrIngList.clear();
        arrIngList = LoadIngredient();
        displayIngredientInfo();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if (arrIngList.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "List are Empty!");
            return;
        }
        arrIngList.clear();
        ingInfoTextArea.setText("");
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CocktailApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CocktailApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CocktailApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CocktailApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CocktailApp().setVisible(true);
            }
        });
    }
    
    void displayIngredientInfo() {
        String str = "";
        int totalV = 0;
        for (int i = 0; i < arrIngList.size(); i++) {
            str += arrIngList.get(i).getName()+ " |   Volume: " + arrIngList.get(i).getVolume() + " |   Calories: " + arrIngList.get(i).getCalories() +"\n";
            totalV += arrIngList.get(i).getVolume();
        }
        ingInfoTextArea.setText(str + "\n\nTotal Volume: " + totalV );
    }
    public static void saveBlender(Blender b)
    {
        try {
            ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("blender.dat"));
            oos.writeObject(b);
        } catch (IOException e) {
            e.printStackTrace();
        }
        JOptionPane.showMessageDialog(null,"Done!");
        
    }
    public static void saveIngredient(ArrayList<Ingredient> i)
    {
        try {
            ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("ingredient.dat"));
            oos.writeObject(i);
        } catch (IOException e) {
            e.printStackTrace();
        }
        JOptionPane.showMessageDialog(null,"Done!");
        
    }
    public static Blender LoadBlender()
    {
        Blender b = null;
        try {
            ObjectInputStream ois = new ObjectInputStream(new FileInputStream("blender.dat"));
            b = (Blender) ois.readObject();
            
            ois.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e) {
            e.printStackTrace();
            
        }
        JOptionPane.showMessageDialog(null,"Loaded");
        return b;
        
    }
    public static ArrayList<Ingredient> LoadIngredient()
    {
        ArrayList<Ingredient> ings = new ArrayList<>();
        try {
            ObjectInputStream ois = new ObjectInputStream(new FileInputStream("ingredient.dat"));
            ings = (ArrayList<Ingredient>)ois.readObject();
            
            ois.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        catch (ClassNotFoundException e) {
            e.printStackTrace();
            
        }
        JOptionPane.showMessageDialog(null,"Loaded Ingredient");
        return ings;
        
    }
    void displayBlenderInfo() {
        String str = "";
        for (int i = 0; i < ingBlenderList.size(); i++) {
            str += ingBlenderList.get(i).getName()+ "\n";
        }
        blenderTextArea.setText("Blender Capacity: " + blender.getCapacity() + "\nBlender Volume: " + blender.getVolume()+"\n\n"+str);
    }
    
    void resetFieldsFruit() {
        fNameTextField.setText("");
        fCaloriesTextField.setText("");
        fVolumeTextField.setText("");
        fRedTextField.setText("");
        fBlueTextField.setText("");
        fGreenTextField.setText("");
    }
    void resetFieldsMilk() {
        mCaloriesTextField.setText("");
        mVolumeTextField.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton blendButton;
    private javax.swing.JButton blenderButton;
    private javax.swing.JTextArea blenderTextArea;
    private javax.swing.JTextField blenderTextField;
    private javax.swing.JButton clearBlenderButton;
    private javax.swing.JButton cupButton;
    private javax.swing.JTextField cupCapacityTextField;
    private javax.swing.JTextArea cupInfoTextArea;
    private javax.swing.JList<String> cupList;
    private javax.swing.JTextField fBlueTextField;
    private javax.swing.JTextField fCaloriesTextField;
    private javax.swing.JTextField fGreenTextField;
    private javax.swing.JTextField fNameTextField;
    private javax.swing.JTextField fRedTextField;
    private javax.swing.JTextField fVolumeTextField;
    private javax.swing.JButton fruitButton;
    private javax.swing.JTextArea ingInfoTextArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField mCaloriesTextField;
    private javax.swing.JTextField mVolumeTextField;
    private javax.swing.JButton milkButton;
    private javax.swing.JButton sugarButton;
    // End of variables declaration//GEN-END:variables
}
